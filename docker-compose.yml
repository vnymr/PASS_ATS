version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: resume_postgres
    environment:
      POSTGRES_DB: resume_generator
      POSTGRES_USER: resume_user
      POSTGRES_PASSWORD: resume_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U resume_user -d resume_generator"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: resume_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: resume_app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://resume_user:resume_pass@postgres:5432/resume_generator
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app/server
      - /app/server/node_modules
    command: >
      sh -c "
        cd server &&
        npx prisma migrate deploy &&
        npm start
      "

volumes:
  postgres_data:
  redis_data: